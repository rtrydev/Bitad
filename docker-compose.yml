version: "3.6"

services:
  db:
    image: postgres
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - app-network
  api:
    container_name: api
    restart: unless-stopped
    tty: true
    build:
      context: .
      dockerfile: ./bitad-api/BitadAPI/Dockerfile
    ports:
      #- "8080:80"
      - "8443:443"
    environment:
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_ENABLED: ${EMAIL_ENABLED}
      SERVER_URL: ${SERVER_URL}
      EMAIL_LOGIN: ${EMAIL_LOGIN}
      SMTP_SERVER: ${SMTP_SERVER}
      REGISTRATION_ENALBED: ${REGISTRATION_ENALBED}
      TZ: ${TIMEZONE}
      #ASPNETCORE_URLS: https://+:443;http://+:80
      ASPNETCORE_URLS: https://+:443
      ASPNETCORE_Kestrel__Certificates__Default__Password: ${PFX_FILE_PASSWORD}
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    depends_on:
      - db
    networks:
      - app-network
  frontend:
    container_name: frontend
    restart: unless-stopped
    tty: true
    build:
      context: .
      dockerfile: ./bitad-frontend/Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - db
    volumes:
      - ./bitad-frontend/public/images:/usr/share/nginx/html/images
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  dbdata:
    driver: local
